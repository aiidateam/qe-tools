name: cd

on:
    push:
        tags:
        -   'v[0-9]+.[0-9]+.[0-9]+*'

jobs:

    validate-release-tag:

        if: github.repository == 'aiidateam/qe-tools'
        runs-on: ubuntu-latest

        steps:
        -   name: Checkout source
            uses: actions/checkout@v2

        -   name: Install Python
            uses: actions/setup-python@v4
            with:
                python-version: '3.9'

        -   name: Validate the tag version against the package version
            run: python .github/workflows/validate_release_tag.py $GITHUB_REF

    pre-commit:

        needs: [validate-release-tag]
        runs-on: ubuntu-latest

        steps:
        -   uses: actions/checkout@v2

        -   name: Install Python
            uses: actions/setup-python@v4
            with:
                python-version: '3.9'
                cache: 'pip'
                cache-dependency-path: pyproject.toml

        -   name: Install Python dependencies
            run: pip install -e .[dev]

        -   name: Run pre-commit
            run: pre-commit run --all-files || ( git status --short ; git diff ; exit 1 )

    tests:

        needs: [validate-release-tag]
        runs-on: ubuntu-latest

        strategy:
            matrix:
                python-version: ['3.8', '3.9', '3.10', '3.11']

        steps:
        -   uses: actions/checkout@v2

        -   name: Install Python
            uses: actions/setup-python@v4
            with:
                python-version: ${{ matrix.python-version }}
                cache: 'pip'
                cache-dependency-path: pyproject.toml

        -   name: Install Python dependencies
            run: pip install -e .[dev]

        -   name: Run pytest
            run: pytest -sv tests

    publish:

        name: Publish to PyPI
        needs: [pre-commit, tests]
        runs-on: ubuntu-latest

        steps:
        -   name: Checkout source
            uses: actions/checkout@v2

        -   name: Set up Python 3.9
            uses: actions/setup-python@v4
            with:
                python-version: '3.9'

        -   name: Install flit
            run: pip install flit~=3.4

        -   name: Build and publish
            run: flit publish
            env:
                FLIT_USERNAME: __token__
                FLIT_PASSWORD: ${{ secrets.PYPI_KEY }}
